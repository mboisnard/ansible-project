---

- name: Add OpenJdk Repository
  apt_repository:
    repo: 'ppa:openjdk-r/ppa'
  become: yes

- name: Install Dev Tools (Git, JDK8)
  apt:
    name:
      - git
      - openjdk-8-jdk
    update_cache: yes
  become: yes

- name: Update Certificates
  shell: update-ca-certificates -f
  become: yes

- name: Create Certificates Files
  shell: /var/lib/dpkg/info/ca-certificates-java.postinst configure
  become: yes

- name: Add Jenkins GPG Key
  apt_key:
    url: "{{ apt.jenkins.gpg_key }}"
    state: present
  become: yes

- name: Add Jenkins Repository
  apt_repository:
    repo: "{{ apt.jenkins.base_url }}"
    state: present
    update_cache: yes
  become: yes

- name: Install Jenkins Latest Version
  apt:
    name:
      - jenkins
    update_cache: yes
  become: yes

- name: Wait Jenkins Initialization
  wait_for:
    timeout: 60

- name: Grant Docker to Jenkins user
  shell: usermod -aG docker jenkins
  become: yes

- name: Grant access to docker.sock
  shell: chmod 777 /var/run/docker.sock
  become: yes

- name: Get Admin User Default Password
  command: cat "{{ jenkins.password.default_file }}"
  register: admin_password
  become: yes

- name: Create Folder
  file: 
    path: "{{ jenkins.config.folder }}"
    recurse: yes
    state: directory

- name: Copying Groovy Scripts Files
  copy:
    src: files/
    dest: "{{ jenkins.config.folder }}"

- find:
    paths: "{{ jenkins.config.scripts_location }}"
  register: groovy_files

- command: cat {{ item }}
  with_items: "{{ groovy_files.files | sort(attribute='path') | map(attribute='path') | list }}"
  register: groovy_scripts

- name: Execute Groovy Scripts
  jenkins_script:
    user: admin
    password: "{{ admin_password.stdout }}"
    script: "{{ item }}"
    timeout: 1200
  with_items: "{{ groovy_scripts.results | map(attribute='stdout') | list }}"

- name: Restart Jenkins
  service:
    name: jenkins
    state: restarted
  become: yes